plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "8.6"
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
repositories {
    mavenCentral()
}
def selenideVersion = "6.19.1",
    restAssuredVersion = "5.3.1",
    allureVersion = "2.21.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}
dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            'com.github.javafaker:javafaker:1.0.2',
            "org.junit.jupiter:junit-jupiter:5.10.0",
            'org.slf4j:slf4j-simple:2.0.7',
            'org.aeonbits.owner:owner:1.0.12'
    )
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
test {
    doFirst {
        def remoteUrl = System.getProperty("selenide.remote")
        if (remoteUrl) {
            try {
                def url = new URL(remoteUrl.replace("/wd/hub", "/status"))
                def connection = url.openConnection()
                connection.connectTimeout = 3000
                connection.readTimeout = 3000
                connection.connect()
            } catch (Exception e) {
                throw new GradleException("‚ùå Selenoid is not reachable at $remoteUrl")
            }
        }
    }
}