name: test

on:
  push:
    branches: [ main ]   # запускать только при push в ветку main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      #  Клонируем проект
      - name: Checkout repo
        uses: actions/checkout@v4

      # Устанавливаем Java 17
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      #  Запускаем Selenoid
      - name: Start Selenoid
        uses: Xotabu4/selenoid-github-action@v2

      #  Делаем gradlew исполняемым (актуально для windows)
      - name: Make gradlew executable
        run: chmod +x gradlew

      # 7. Запускаем тесты (с передачей URL до Selenoid)
      - name: Run tests
        run: ./gradlew clean test -Dselenide.remote=http://localhost:4444/wd/hub

      # 8. Клонируем историю предыдущих Allure-отчётов
      - name: Get Allure history
        if: always()
        continue-on-error: true
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: gh-pages

      # 9. Генерируем новый Allure-отчёт
      - name: Generate Allure report
        if: always()
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: build/allure-results
          allure_report: allure-report
          allure_history: allure-history
          gh_pages: gh-pages

      # 10. Публикуем Allure-отчёт на GitHub Pages
      - name: Deploy Allure report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-history
          publish_branch: gh-pages

      # 11. Выводим summary (успешные и упавшие тесты)
      - name: Add summary for test results
        if: always()
        run: |
          passed=$(find build/allure-results -name "*.json" -exec jq -r '.status' {} \; | grep -c passed || true)
          failed=$(find build/allure-results -name "*.json" -exec jq -r '.status' {} \; | grep -c failed || true)
          echo "### ✅ Passed: $passed" >> $GITHUB_STEP_SUMMARY
          echo "### ❌ Failed: $failed" >> $GITHUB_STEP_SUMMARY
