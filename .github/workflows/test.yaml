name: test

on: [ push ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонируем репозиторий
      - uses: actions/checkout@v4

      # 2. Устанавливаем Java 17
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      # 3. Запускаем Selenoid (для запуска Selenide в CI)
      - uses: Xotabu4/selenoid-github-action@v2

      # 4. Проверяем доступность Selenoid
      - name: Ensure Selenoid is reachable
        run: |
          for i in {1..20}; do
            if curl -s --fail http://localhost:4444/status | grep -q "total"; then
              echo "✅ Selenoid is up!"
              break
            fi
            echo "⏳ Waiting for Selenoid..."
            sleep 2
          done
          curl -s --fail http://localhost:4444/status | grep -q "total" || {
            echo "Selenoid is not responding. Exiting..."
            exit 1
          }

      # 5. Делаем gradlew исполняемым
      - run: chmod +x gradlew

      # 6. Запускаем тесты (передаём URL до Selenoid)
      - run: ./gradlew clean test -Dselenide.remote=http://localhost:4444/wd/hub

      # 7. Клонируем историю предыдущих отчетов
      - name: Get Allure history
        if: always()
        continue-on-error: true
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: gh-pages

      # 8. Генерируем новый Allure отчёт
      - name: Generate Allure report
        if: always()
        uses: simple-elf/allure-report-action@master
        id: allure-report
        with:
          allure_results: build/allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

      # 9. Публикуем отчёт на GitHub Pages
      - name: Deploy Allure report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-history
          publish_branch: gh-pages
